#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import (absolute_import, division,
                        print_function, unicode_literals)

__author__ = "Yuji Ikeda"

import sys
from fc_analysis.vasp_fc_symmetrizer_spg import VaspFCSymmetrizerSPG


def run(args):
    fc_analyzer = VaspFCSymmetrizerSPG(
        force_constants_filename=args.force_constants,
        poscar=args.poscar,
        poscar_ideal=args.poscar_ideal,
        phonopy_conf=args.phonopy_conf,
    )

    # force_constants_analyzer.check_translational_invariance()

    if args.is_full:
        fc_analyzer.average_force_constants_spg_full()
    else:
        fc_analyzer.average_force_constants_spg()

    fc_analyzer.write_force_constants_symmetrized()
    fc_analyzer.write_force_constants_sd()
    fc_analyzer.write_force_constants_pair()
    fc_analyzer.write_force_constants_pair_sd()


def main():
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument("-f", "--force_constants",
                        default="FORCE_CONSTANTS",
                        type=str,
                        help="FORCE_CONSTANTS filename.")
    parser.add_argument("-p", "--poscar",
                        default="POSCAR",
                        type=str,
                        help="POSCAR filename.")
    parser.add_argument("--poscar_ideal",
                        # default="POSCAR_ideal",
                        type=str,
                        help="The filename of POSCAR_ideal.")
    parser.add_argument('--full', dest='is_full',
                        action='store_true',
                        help='Full FC symmetrization.')
    parser.add_argument("--phonopy_conf",
                        # default="POSCAR_ideal",
                        type=str,
                        required=True,
                        help="The filename of phonopy conf.")
    args = parser.parse_args()

    print(' '.join(sys.argv))

    run(args)

if __name__ == "__main__":
    main()
